{
  "env": {
      "browser": true,
      "commonjs": true,
      "es6": true,
      "jest": true
  },
  "globals": {
      "__dirname": true,
      "process": true,
      "__DEV__": true
  },
  "parser": "babel-eslint",
  "parserOptions": {
      "sourceType": "module"
  },
  "extends": [
      "plugin:flowtype/recommended"
  ],
  "plugins": [
      "react",
      "react-native",
      "flowtype"
  ],
  "settings": {
      "flowtype": {
          "onlyFilesWithFlowAnnotation": true
      }
  },
  "rules": {
      "block-scoped-var": "error",
      "brace-style": [
          "error",
          "1tbs",
          {
              "allowSingleLine": true
          }
      ],
      "camelcase": "error",
      "comma-dangle": [
          "warn",
          "always-multiline"
      ],
      "comma-spacing": [
          "error",
          {
              "before": false,
              "after": true
          }
      ],
      "comma-style": [
          "error",
          "last"
      ],
      "indent": [
          "error",
          4,
          {
              "SwitchCase": 1
          }
      ],
      "init-declarations": [
          "error",
          "always"
      ],
      "jsx-quotes": [
          "error",
          "prefer-single"
      ],
      "keyword-spacing": [
          "error",
          {
              "before": false,
              "after": true,
              "overrides": {
                  "break": {
                      "before": true
                  },
                  "else": {
                      "before": true
                  },
                  "finally": {
                      "before": true
                  },
                  "from": {
                      "before": true
                  },
                  "catch": {
                      "before": true
                  },
                  "as": {
                      "before": true
                  },
                  "return": {
                      "before": true,
                      "after": true
                  },
                  "this": {
                      "before": true
                  }
              }
          }
      ],
      "new-cap": "off",
      "no-alert": "error",
      "no-console": [
          "warn",
          { "allow": ["warn", "error"] }
      ],
      "no-debugger": "error",
      "no-dupe-keys": "error",
      "no-empty": "error",
      "no-extra-semi": "error",
      "no-extra-boolean-cast": "error",
      "semi": [
          "error",
          "always"
      ],
      "no-inline-comments": "off",
      "no-irregular-whitespace": "error",
      "no-lonely-if": "off",
      "no-mixed-spaces-and-tabs": "error",
      "no-multiple-empty-lines": "error",
      "no-new": "warn",
      "no-self-compare": "error",
      "no-undef": "error",
      "no-shadow": "off",
      "no-underscore-dangle": "off",
      "no-unused-expressions": [
          "warn"
      ],
      "no-unused-vars": [
          "warn",
          {
              "vars": "local",
              "args": "after-used"
          }
      ],
      "no-var": "error",
      "one-var": [
          "error",
          "never"
      ],
      "object-curly-spacing": [
          "error",
          "always"
      ],
      "prefer-const": "error",
      "padded-blocks": [
          "error",
          "never"
      ],
      "quotes": [
          "error",
          "single"
      ],
      "radix": "error",
      "space-before-blocks": [
          "error",
          "always"
      ],
      "space-before-function-paren": [
          "error",
          "never"
      ],
      "space-in-brackets": "off",
      "space-infix-ops": "error",
      "spaced-comment": [
          "error",
          "always"
      ],
      "strict": [
          "error",
          "never"
      ],
      "vars-on-top": "error",
      "react/display-name": "warn",
      "react/jsx-boolean-value": [
          "error",
          "always"
      ],
      "react/jsx-curly-spacing": [
          "error",
          "always"
      ],
      "react/jsx-max-props-per-line": [
          "error",
          {
              "maximum": 2
          }
      ],
      "react/jsx-no-duplicate-props": [
          "error"
      ],
      "react/jsx-no-undef": "error",
      "react/jsx-sort-props": "off",
      "react/jsx-uses-react": "error",
      "react/jsx-uses-vars": "error",
      "react/jsx-wrap-multilines": "error",
      "react/no-did-update-set-state": "off",
      "react/no-multi-comp": "off",
      "react/no-unknown-property": "error",
      "react/react-in-jsx-scope": "error",
      "react/self-closing-comp": "error",
      "react-native/no-unused-styles": "error",
      "react-native/split-platform-components": "warn",
      "react-native/no-inline-styles": "error",
      "react-native/no-color-literals": "warn",
      "flowtype/boolean-style": [
          "error",
          "boolean"
      ],
      "flowtype/define-flow-type": "warn",
      "flowtype/delimiter-dangle": [
          "warn",
          "only-multiline"
      ],
      "flowtype/generic-spacing": [
          "error",
          "never"
      ],
      "flowtype/no-primitive-constructor-types": "error",
      "flowtype/no-types-missing-file-annotation": "error",
      "flowtype/no-weak-types": "off",
      "flowtype/object-type-delimiter": [
          "error",
          "comma"
      ],
      "flowtype/require-parameter-type": "off",
      "flowtype/require-return-type": [
          "off",
          "always",
          {
              "annotateUndefined": "never"
          }
      ],
      "flowtype/require-valid-file-annotation": "error",
      "flowtype/semi": [
          "error",
          "always"
      ],
      "flowtype/space-after-type-colon": [
          "error",
          "always"
      ],
      "flowtype/space-before-generic-bracket": [
          "error",
          "never"
      ],
      "flowtype/space-before-type-colon": [
          "error",
          "never"
      ],
      "flowtype/type-id-match": [
          "error",
          "^[A-Z][a-z0-9A-Z]+$"
      ],
      "flowtype/union-intersection-spacing": [
          "warn",
          "always"
      ],
      "flowtype/use-flow-type": "warn",
      "flowtype/valid-syntax": "warn"
  }
}
